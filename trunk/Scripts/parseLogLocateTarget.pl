# This script takes as input the name of the log file generated by the Player Server.
# It searches for the log statements generated by the Navigate.locateTarget method,
# extracts the relevant information, and prints it to the screen in a tab-separated
# table format.
#
# Here is an example of the log statements this script searches for:
# [1296494759037] Navigate:locateTarget(): Current State as of time 1296494759037:
#	Location Data:
#		Current Location: (30.526305, -97.632595)
#		Target Location: (30.52626, -97.6324133)
#		Distance: 18.107896881224008 meters
#	Heading Data:
#		Angle to target: -1.8135723503139516 radians
#		Current Heading: -1.4573500156402588 radians
#		Heading Error: -0.356222334673693 radians (Must Turn Right!)
#
# To use this script, execute:
#  $ perl parseLogLocateTarget.pl <name of log file>
#
# Usually, you will want to redirect its output into a file.  To do this, execute:
#  $ perl parseLogLocateTarget.pl <name of log file> | tee LocateTargetTable.txt
#
# The above command will save the table into the file called "LocationTargetTable.txt"
# You can then import this file into Excel or Matlab to perform further processing.
#
# Author: Chien-Liang Fok
# Created: 02/08/2011
#

$numArgs = $#ARGV + 1;
if ($numArgs != 1) {
	print "Usage: perl parseLogLocateTarget.pl [log file name]\n";
	exit 0;
}

$LOGFILE = $ARGV[0];
open(LOGFILE) or die("Could not open log file.");

# Print the table header...
print "Time Stamp (ms)\tDelta Time (ms)\tCurrent Latitude\tCurrent Longitude\tTarget Latitude\t";
print "Target Longitude\tDistance to Target (m)\tAngle To Target (radians)\tCurrent Heading (radians)\t";
print "Heading Error (radians)\tTurn Direction\n";

while (my $line  = <LOGFILE>) {
	
	if ($line =~ m/Starting experiment at time/) {
		@array = split(/(\s+|:)/, $line);
		$startTime = $array[16];
	}
	elsif($line =~ m/Current State as of time/) {
		
		$line1 = <LOGFILE>; # Location Data
		$line2 = <LOGFILE>; # Current Location
		$line3 = <LOGFILE>; # Target Location
		$line4 = <LOGFILE>; # Distance
		$line5 = <LOGFILE>; # Heading Data
		$line6 = <LOGFILE>; # Angle to Target
		$line7 = <LOGFILE>; # Current Heading
		$line8 = <LOGFILE>; # Heading Error
#		print "$line$line1$line2$line3$line4$line5$line6$line7$line8";
		
		# Extract the time...
		@array = split(/(\s+|:)/, $line);
		$timeStamp = $array[18];
		$deltaTime = $timeStamp - $startTime;
		
		# Extract the current location...
		@array = split(/(\x28|,\s+|\x29)/,$line2);
		$currLatitude = $array[2];
		$currLongitude = $array[4];
		
		# Extract the target location...
		@array = split(/(\x28|,\s+|\x29)/,$line3);
		$destLatitude = $array[2];
		$destLongitude = $array[4];
		
		# Extract the distance...
		@array = split(/\s+/, $line4);
		$distance = $array[2];
		
		# Extract the angle to target...
		@array = split(/\s+/, $line6);
		$angleToTarget = $array[4];
		
		# Extract the current heading...
		@array = split(/\s+/, $line7);
		$currentHeading = $array[3];
		
		# Extract the heading error...
		@array = split(/(\s+Heading Error:\s+|\sradians\s\x28Must\s|\x29)/, $line8);
		$headingError = $array[2];
		$turnDirection = $array[4];
		
#		print "Array:\n";
#		$indx = 0;
#		foreach (@array) {
#			print "$indx: $_\n";
#			$indx++;
#		}
		
#		print "----\nTime stamp: $timeStamp\nDelta time: $deltaTime\n";
#		print "Current Location: ($currLatitude, $currLongitude)\n";
#		print "Target Location: ($destLatitude, $destLongitude)\n";
#		print "Distance: $distance\n"; 
#		print "Angle to target: $angleToTarget\n";
#		print "Current Heading: $currentHeading\n";
#		print "Heading Error: $headingError\n";
#		print "Turn Direction: $turnDirection\n";
		
		print "$timeStamp\t$deltaTime\t$currLatitude\t$currLongitude\t$destLatitude\t$destLongitude\t";
		print "$distance\t$angleToTarget\t$currentHeading\t$headingError\t$turnDirection\n";
    } 
}

