package pharoslabut.navigate.motionscript;

import java.io.*;
//import java.util.*;

import pharoslabut.navigate.Location;

/**
 * Reads in a GPS trace file generated by Tony's program.
 * The file is in plain text where each line consists of:
 * [longitude] [latitude] [speed] [pause time at destination in seconds]
 * 
 * @author Chien-Liang Fok
 */
public class MotionScriptReader {

	public static MotionScript readTraceFile(String fileName) {
		MotionScript result = new MotionScript(fileName);
		try {
			BufferedReader input =  new BufferedReader(new FileReader(fileName));
			try {
				String line = null;
				int lineno = 1;
				while (( line = input.readLine()) != null) {
					if (!line.equals("")  && !line.startsWith("#")) {
						
						// Ignore comments...
						if (line.contains("//"))
							line = line.substring(line.indexOf("//")+1);
						
						//StringTokenizer st = new StringTokenizer(line);
						try {
							
//							System.out.println("Read in line: " + line);
//							for (int i=0; i < elem.length; i++) {
//								System.out.println(i + ": " + elem[i]);
//							}
							
							if (line.contains("MOVE")) {
								String[] elem = line.split("[\\s]+");
								double latitude = Double.valueOf(elem[1]);
								double longitude = Double.valueOf(elem[2]);
								double speed = Double.valueOf(elem[3]);
								Location dest = new Location(latitude, longitude);
								result.addInstruction(new Move(dest, speed));
							}
							else if (line.contains("PAUSE")) {
								String[] elem = line.split("[\\s]+");
								long pauseTime = Long.valueOf(elem[1]);
								result.addInstruction(new Pause(pauseTime));
							}
							else if (line.contains("START_BCAST_TELOSB")) {
								String[] elem = line.split("[\\s]+");
								long minPauseTime = Long.valueOf(elem[1]);
								long maxPauseTime = Long.valueOf(elem[2]);
								short txPower = Short.valueOf(elem[3]);
								result.addInstruction(new StartBcastTelosB(minPauseTime, maxPauseTime, txPower));
							}
							else if (line.contains("START_BCAST_WIFI")) {
								String[] elem = line.split("[\\s]+");
								long minPauseTime = Long.valueOf(elem[1]);
								long maxPauseTime = Long.valueOf(elem[2]);
								short txPower = Short.valueOf(elem[3]);
								result.addInstruction(new StartBcastWiFi(minPauseTime, maxPauseTime, txPower));
							}
							else if (line.contains("STOP_BCAST_TELOSB")) {
								result.addInstruction(new StopBcastTelosB());
							}
							else if (line.contains("STOP_BCAST_WIFI")) {
								result.addInstruction(new StopBcastWifi());
							}
							else if (line.contains("WAIT_EXP_STOP")) {
								result.addInstruction(new WaitStopExp());
							} 
							else if (line.contains("SCOOT")) {
								String[] elem = line.split("[\\s]+");
								int amount = Integer.valueOf(elem[1]);
								result.addInstruction(new Scoot(amount));
							} else
								throw new UnknownInstructionException(line);
						} catch(Exception e) {
							e.printStackTrace();
							System.err.println("Error on line " + lineno + " of motion script " + fileName);
							System.exit(1);
						}
					}
					lineno++;
				}
			}
			finally {
				input.close();
			}
		}
		catch (IOException ex){
			ex.printStackTrace();
		}
		return result;
	}
	
	public static void main(String[] args) {
		//GPSMotionScript script = GPSTraceReader.readTraceFile("M11/M11-MotionScripts/m11-gps-lollipop-0.6-4spause.txt");
		//GPSMotionScript script = GPSTraceReader.readTraceFile("bin/LBJ-MotionScript-1.txt");
		MotionScript script = MotionScriptReader.readTraceFile("MM7/LBJ-Lot-BackAndForth-1.5.txt");
		System.out.println("Read in the following GPSMotionScript:\n" + script);
	}
}
