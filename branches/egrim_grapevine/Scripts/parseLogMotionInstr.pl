# This script takes as input the name of the log file generated by the Player Server.
# It searches for the log statements generated by the NavigateCompassGPS component,
# extracts the relevant information, and prints it to the screen in a tab-separated
# table format.
#
# Here is an example of the log statements this script searches for:
#[1297085532495] NavigateCompassGPS: Current Instruction:
#	Velocity: + 0.6
#	Heading: -0.24499999999999997
#
# To use this script, execute:
#  $ perl parseLogMotionInstr.pl <name of log file>
#
# Usually, you will want to redirect its output into a file.  To do this, execute:
#  $ perl parseLogMotionInstr.pl <name of log file> | tee MotionInstrTable.txt
#
# The above command will save the table into the file called "MotionInstrTable.txt"
# You can then import this file into Excel or Matlab to perform further processing.
#
# Author: Chien-Liang Fok
# Created: 02/09/2011
#

$numArgs = $#ARGV + 1;
if ($numArgs != 1) {
	print "Usage: perl parseLogMotionInstr.pl [log file name]\n";
	exit 0;
}

$LOGFILE = $ARGV[0];
open(LOGFILE) or die("Could not open log file.");

# Print the table header...
print "Time Stamp (ms)\tDelta Time (ms)\tDelta Time (s)\tVelocity (m/s)\tTurn Instruction\n";

while (my $line  = <LOGFILE>) {
	
	if ($line =~ m/Starting experiment at time/) {
		@array = split(/(\s+|:)/, $line);
		$startTime = $array[16];
	}
	elsif($line =~ m/NavigateCompassGPS: Current Instruction/) {
		
		$line1 = <LOGFILE>; # Velocity data
		$line2 = <LOGFILE>; # Heading data (negative means turn right)
#		print "$line$line1$line2\n";
		
		# Extract the time...
		@array = split(/(\[|\])/, $line);
		$timeStamp = $array[2];
		$deltaTime = $timeStamp - $startTime;
		$deltaTimeS = $deltaTime / 1000;
		
		# Extract the velocity command...
		@array = split(/(\[|\]|\s+|,)/,$line1);
		$velSign = $array[4];
		$velocity = $array[6];
		if ($velSign eq "-") {
			$velocity *= -1;
		}
		
		# Extract the heading command...
		@array = split(/(\[|\]|\s+|,)/,$line2);
		$heading = $array[4];
		
#		print "Array:\n";
#		$indx = 0;
#		foreach (@array) {
#			print "$indx: $_\n";
#			$indx++;
#		}

		
		print "$timeStamp\t$deltaTime\t$deltaTimeS\t$velocity\t$heading\n";
    } 
}

