Interrupts Used in the Proteus Micro-Controller:
 - Command.c: ECT Channel 1, interrupt 9, schedules Command_sendData at 5Hz
 - Tach.c: ECT Channel 0, interrupt 8, connected to channel A of Traxxas' motor encoder
 - Tach.c: ECT Channel 4, interrupt 12, schedules TachPeriodicFG(...) at 10Hz
 - Servo_PWM.c: ECT Channel 2, interrupt 10, schedules Servo_updatePosition at 50Hz
 - MotorControl.c: ECT Channel 3, interrupt 11, schedules MotorControl_updateSpeed at 20Hz
 - MotorControl.c: ECT Channel 5, interrupt 13, schedules MotorControl_doSafetyCheck at 0.5Hz
 - SerialDriver.c: SCI Channel 0, interrupt 20, for serial communication
 - SerialDriver.c: SCI Channel 1, interrupt 21, for serial communication

Channel		TFLG1 Bit	Interrupt	TC Register
0			0x01		8			TC0 // Tach.c, encoder
1			0x02		9			TC1
2			0x04		10			TC2 // Servo_PWM.c, Servo_updatePosition
3			0x08		11			TC3 // Compass.c, input of PWM signal
4			0x10		12			TC4 // Tach.c, Tach_doSpeedCalc
5			0x20		13			TC5 // MotorControl.c, MotorControl_doSafetyCheck
6			0x40		14			TC6 // MotorControl.c, MotorControl_updateSpeed
7			0x80		15			TC7 // Compass.c, Compass_Timer


Software context switch design:
 - The execution model of the micro-controller is bi-level consisting of events and tasks.  Events are caused by hardware interrupts and can pre-empt tasks.  Since only one event can execute at a time, it must be short.  Tasks are longer-running processes that perform complex calculations and can be pre-empted by events.
 - There are two types tasks.  The first is where at most one instance of the task may exist at a time.  The second is where multiple instances of the same task may exist at a time.


Singleton Tasks:
 - Servo_PWM.c, 
 - MotorControl.c, 
 - Tach.c, 
 - Command.c, doSafetyCheck()
