package pharoslabut.logger.analyzer;

import java.util.Vector;
import java.util.Enumeration;
import pharoslabut.logger.FileLogger;


/**
 * Extracts the RSSI data from a robot's log file.
 * It currently only supports the RSSI generated by the TelosB mote.
 * 
 * @author Chien-Liang Fok
 */
public class GetRSSIData {

	/**
	 * The constructor. 
	 * 
	 * @param robotExpDataFile The robot's log file.
	 * @param numReceptions The number of beacon receptions.
	 */
	public GetRSSIData(String robotExpDataFile, int numReceptions) {
		RobotExpData robotData = new RobotExpData(robotExpDataFile);
		
		String destFile = robotExpDataFile.substring(0, robotExpDataFile.indexOf(".")) + ".rssi";
		FileLogger flogger = new FileLogger(destFile, false);
		
		Vector<TelosBRxRecord> rxHist = robotData.getTelosBRxHist();
		
		log("File name:\t" + destFile, flogger);
		log("Sample size:\t" + rxHist.size(), flogger);
		log("Number of Lost Beacons:\t" + countLostBeacons(rxHist.elements(), numReceptions), flogger);
		log("Timestamp\tSender\tReceiver\tSeqno\tRSSI\tLQI\tMote Timestamp", flogger);
		
		Enumeration<TelosBRxRecord> e = rxHist.elements();
		while (e.hasMoreElements()) {
			TelosBRxRecord rec = e.nextElement();
			log(rec.toString(), flogger);
		}
		
	}
	
	private int countLostBeacons(Enumeration<TelosBRxRecord> e, int numBeacons) {
		int count = 0;
		int nxtExpectedSeqNo = 0;
		int numMissing = 0;
		
		while (e.hasMoreElements() && count++ < numBeacons) {
			TelosBRxRecord rec = e.nextElement();
			if (rec.getSeqNo() != nxtExpectedSeqNo) {
				numMissing += rec.getSeqNo() - nxtExpectedSeqNo;
				nxtExpectedSeqNo = rec.getSeqNo() + 1;
			} else
				nxtExpectedSeqNo++;
		}
		
		return numMissing;
	}
	
	private void log(String msg, FileLogger flogger) {
		System.out.println(msg);
		if (flogger != null)
			flogger.log(msg);
	}
	
	private static void print(String msg) {
		if (System.getProperty ("PharosMiddleware.debug") != null)
			System.out.println(msg);
	}
	
	private static void usage() {
		System.setProperty ("PharosMiddleware.debug", "true");
		print("Usage: pharoslabut.logger.analyzer.GetRSSIData <options>\n");
		print("Where <options> include:");
		print("\t-robotFile <name of file containing robot data>: (required)");
		print("\t-numReceptions <number of receptions>: The number of beacons to receive in the experiment (default 500)");
		print("\t-debug: enable debug mode");
	}
	
	public static void main(String[] args) {
		String expDir = null;
		int numReceptions = 500;
		
		// Process the command line arguments...
		try {
			for (int i=0; i < args.length; i++) {
				if (args[i].equals("-robotFile"))
					expDir = args[++i];
				else if (args[i].equals("-numReceptions"))
					numReceptions = Integer.valueOf(args[i]);
				else if (args[i].equals("-debug") || args[i].equals("-d"))
					System.setProperty ("PharosMiddleware.debug", "true");
				else {
					usage();
					System.exit(1);
				}
			}
		} catch(Exception e) {
			e.printStackTrace();
			usage();
			System.exit(1);
		}
		
		if (expDir == null) {
			usage();
			System.exit(1);
		}
	
		new GetRSSIData(expDir, numReceptions);
	}
}
