# This script takes as input the name of the log file generated by the Player Server.
# It searches for the log statements generated by the CompassBuffer,
# extracts the relevant information, and prints it to the screen in a tab-separated
# table format.
#
# Here is an example of the log statements this script searches for:
# [1297085114785] CompassDataBuffer: New heading: -1.591740369796753, buffer size=3
#
# To use this script, execute:
#  $ perl parseLogCompass.pl <name of log file>
#
# Usually, you will want to redirect its output into a file.  To do this, execute:
#  $ perl parseLogCompass.pl <name of log file> | tee CompassDataTable.txt
#
# The above command will save the table into the file called "CompassDataTable.txt"
# You can then import this file into Excel or Matlab to perform further processing.
#
# Author: Chien-Liang Fok
# Created: 02/08/2011
#

$numArgs = $#ARGV + 1;
if ($numArgs != 1) {
	print "Usage: perl parseLogCompass.pl [log file name]\n";
	exit 0;
}

$LOGFILE = $ARGV[0];
open(LOGFILE) or die("Could not open log file.");

# Print the table header...
print "Time Stamp (ms)\tDelta Time (ms)\tDelta Time (s)\tHeading (radians)\n";

while (my $line  = <LOGFILE>) {
	
	if ($line =~ m/Starting experiment at time/) {
		@array = split(/(\s+|:)/, $line);
		$startTime = $array[16];
	}
	elsif($line =~ m/CompassDataBuffer: New heading/) {
		@array = split(/(\[|\]|\s+|,)/, $line);
		$timeStamp = $array[2];
		$heading = $array[12];
		$deltaTime = $timeStamp - $startTime;
		$deltaTimeS = $deltaTime / 1000;
#		print "Array:\n";
#		$indx = 0;
#		foreach (@array) {
#			print "$indx: $_\n";
#			$indx++;
#		}
		
		print "$timeStamp\t$deltaTime\t$deltaTimeS\t$heading\n";
    } 
}

